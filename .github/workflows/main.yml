name: CI Build

on:
  push:
    branches-ignore:
      - "releases/**"
    paths-ignore:
      - "**.md"
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        qt_version: [5.15.2]
        platform: [ubuntu-20.04]

    runs-on: ${{ matrix.platform }}
    name: ${{ matrix.platform }} - Qt ${{ matrix.qt_version }}
      
    env:
      CMAKE_PREFIX_PATH: $Qt6_DIR/lib/cmake
        
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive

      - name: Install Qt from package manager
        run: |
          sudo apt install qt5-default qt5-qmake qt5-qmake-bin libqt5core5a libqt5gui5 libqt5concurrent5

      - name: Install required packages
        run: |
          sudo apt install libkf5config-dev libkf5configwidgets5 libkf5configwidgets-dev libkf5coreaddons-dev libkf5crash-dev libkf5dbusaddons-dev libkf5doctools-dev kdoctools-dev libkf5i18n-dev libkf5xmlgui-dev libkf5kio-dev libkf5kiocore5 libkf5kiogui5 libkf5kiowidgets5 libkf5textwidgets-dev libkf5texteditor-dev cmake make extra-cmake-modules gettext

          
      - name: Build with CMake
        run: |
          mkdir build-cmake
          cd build-cmake
          cmake .. ${{ matrix.additional_arguments }}  ${{ matrix.cmake_params }}
          cmake --build .

  deploy:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v1
        with:
          submodules: recursive
          path: source
      - uses: actions/setup-python@v1
      - uses: Skycoder42/action-deploy-qt@master
        with:
          token: ${{secrets.GITHUB_TOKEN}}
          version: 5.15.2
          host: ${{secrets.SSHFS_HOST}}
          key: ${{secrets.SSHFS_KEY}}
          port: ${{secrets.SSHFS_PORT}} 
