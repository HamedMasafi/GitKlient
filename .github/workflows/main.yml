name: CI Build

on:
  push:
    branches:
      - master
  pull_request:
    paths-ignore:
      - "**.md"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-20.04]

    runs-on: ${{ matrix.platform }}
    name: ${{ matrix.platform }} - Qt ${{ matrix.qt_version }}
      
    env:
      CMAKE_PREFIX_PATH: $Qt6_DIR/lib/cmake
        
    steps:
      - name: Clone repo
        uses: actions/checkout@v2.3.4
        with:
          submodules: recursive

      - name: Install Qt from package manager
        run: |
          sudo apt install qt5-default qt5-qmake qt5-qmake-bin libqt5core5a libqt5gui5 libqt5concurrent5

      - name: Install required packages
        run: |
          sudo apt install libkf5config-dev libkf5configwidgets5 libkf5configwidgets-dev libkf5coreaddons-dev libkf5crash-dev libkf5dbusaddons-dev libkf5doctools-dev kdoctools-dev libkf5i18n-dev libkf5xmlgui-dev libkf5kio-dev libkf5kiocore5 libkf5kiogui5 libkf5kiowidgets5 libkf5textwidgets-dev libkf5texteditor-dev cmake make extra-cmake-modules gettext libkf5syntaxhighlighting-dev libkf5syntaxhighlighting-data libkf5syntaxhighlighting-tools rpm
          
      - name: Build with CMake
        run: |
          mkdir build-cmake
          cd build-cmake
          cmake .. ${{ matrix.additional_arguments }}  ${{ matrix.cmake_params }} -DGITKLIENT_BUILD_DIR=build-cmake
          make -j 4
          VAR=`cat version`
          echo "version=${VAR}" >> $GITHUB_ENV
          
      - name: Build deb package
        #if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd build-cmake
          sudo cpack -G DEB
          
      - name: Build rpm package
        #if: startsWith(github.ref, 'refs/tags/')
        run: |
          cd build-cmake
          sudo cpack -G RPM

      - name: Create Release
        id: create_release
        #if: startsWith(github.ref, 'refs/tags/')
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.version }}
          release_name: Release ${{ env.version }}
          draft: false
          prerelease: false
          
      - name: Upload debian package
        id: upload-release-asset 
        #if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-cmake/gitklient.deb
          asset_name: gitklient_${{env.version}}_amd64.deb
          asset_content_type: application/vnd.debian.binary-package

      - name: Upload rpm package
        id: upload-release-asset 
        #if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build-cmake/gitklient.rpm
          asset_name: gitklient-${{env.version}}-Linux.rpm
          asset_content_type: application/x-rpm
